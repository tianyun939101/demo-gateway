spring:
  application:
    name: hzero-asgard
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:mysql://db.hzero.org:3306/hzero_asgard?useUnicode=true&characterEncoding=utf-8&useSSL=false}
    username: ${SPRING_DATASOURCE_USERNAME:hzero}
    password: ${SPRING_DATASOURCE_PASSWORD:hzero}
  redis:
    host: ${SPRING_REDIS_HOST:redis.hzero.org}
    port: 6379
    database: ${SPRING_REDIS_DATABASE:4}

choerodon:
  asgard:
    quartz:
      auto-startup: true
      overwrite-existing-jobs: true
      properties:
        org.quartz.jobStore.tablePrefix: QRTZ_
        org.quartz.jobStore.driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
        org.quartz.jobStore.class: org.quartz.impl.jdbcjobstore.JobStoreTX
        org.quartz.jobStore.isClustered: true
        org.quartz.jobStore.misfireThreshold: 25000
        org.quartz.scheduler.makeSchedulerThreadDaemon: true
        org.quartz.jobStore.selectWithLockSQL: ${HZERO_ASGARD_SELECT_WITH_LOCK:SELECT * FROM {0}LOCKS WHERE LOCK_NAME = ? FOR UPDATE}
  saga:
    consumer:
      enabled: false
  schedule:
    consumer:
      enabled: false
  eureka:
    event:
      max-cache-size: 300 # 存储的最大失败数量
      retry-time: 5 # 自动重试次数
      retry-interval: 3 # 自动重试间隔(秒)
      skip-services: config**, **register-server, **gateway**, zipkin**, hystrix**, oauth**, hzero-message, hzero-file, hzero-portal, hzero-interface, hzero-governance, hzero-report, hzero-scheduler, hzero-transfer, hzero-workflow**

hystrix:
  command:
    default:
      execution:
        timeout:
          enabled: true
        isolation:
          thread:
            timeoutInMilliseconds: ${HYSTRIX_COMMAND_TIMEOUT_IN_MILLISECONDS:40000}
  stream:
    queue:
      enabled: false
ribbon:
  ReadTimeout: ${RIBBON_READ_TIMEOUT:30000}
  ConnectTimeout: ${RIBBON_CONNECT_TIMEOUT:3000}
mybatis:
  mapperLocations: classpath*:/mapper/*.xml
  configuration:
    mapUnderscoreToCamelCase: true

feign:
  hystrix:
    enabled: true

logging:
  level:
    org.apache.ibatis: ${LOGGING_LEVEL:info}
    io.choerodon: ${LOGGING_LEVEL:info}
    org.hzero: ${LOGGING_LEVEL:info}
    org.hzero.iam.infra.feign: ${LOGGING_LEVEL:info}
